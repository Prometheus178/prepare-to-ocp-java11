package conclusion;

// имеет дефолтный конструктор
// если создан хотя бы один конструктор то теряется дефолтный с пустым параметром

/**
 * JavaDoc идет с JDK
 * можно сгенерировать HTML
 */
class Student {
    int id; // получит дефолтное значение ( id = 0)
    // наименование переменных можно с $ || _ (это не операторы)
    String name; // получит дефолтом значение ( name = null)
    String _na_me_;
    String $na$me$;
    String NAME;
    static String notInstanceVariable; // статик делает его не принадлежащим к ОБЪЕКТУ этого класса
    static int age; // получит дефолтное значение ( age = 0 )

    // статик инициализаторы выполнятся 1 раз когда загружается класс JVMом
    static {
        // 1 и один раз
    }

    // инстанс инициализатор выполняется перед конструктором
    {
        // 2
    }

    // инициализатор
    Student() {
        // 3
        // имеет доступ к ЛЮБЫМ полям класса
        NAME = "a"; // non-static
        age = 50; // static

    }

    private Student(int id) {
    }

    protected Student(int id , int age){

    }

    //параметризированный конструктор
    public  Student(int id, String name) {
        // this это указание на поле экземпляра
        this.id = id;
        name = name; // поле указывает на самого себя
    }

// synchronized можно с методами но не с классами конструкторами
    synchronized void methodTest() {
        int a; // скомпилируется
        int b; // скомпилируется
        // a =  a + b; перед использованием локальные переменные должны проинициализированы (нет дефолтнын значений)
    }

}

